{% from "macros.njk" import label, field, confirm, select, textarea, button %}

<form name="problems" method="POST" data-netlify="true" action="/submitted/" netlify-honeypot="bot-field">
  <ol class="questions">
    <li class="question">
      {{ label("What’s your name?", "name") }}
      {{ field( "text", "name", { required: true, placeholder: "Katherine Johnson", autocomplete: "name", autocorrect: "off", autocapitalize: "off" } ) }}
      <div class="question__addendum">
        {{ confirm("Please keep my full name private", "privacy") }}
      </div>
    </li>
    <li class="question">
      {{ label("Where can we email you?", "email") }}
      {{ field( "email", "email", { required: true, placeholder: "katherine@johnson.tld", autocomplete: "email", description: "We will only use this information to contact you when your want is published and reach out if we select you to participate in an event. We will not retain your email address beyond that period of time." } ) }}
    </li>
    <li class="question">
      {{ label("Do you have a GitHub username?", "github") }}
      {{ field( "text", "github", { placeholder: "your_handle", description: "We use GitHub for tracking and discussing Wants. A GitHub account isn’t required, but could be helpful if you’re interested in participating there." } ) }}
    </li>
    <li class="question">
      {% set upcoming_events = collections.upcoming_events | toString( " - ", ["title", "location"]) %}
      {{ label("If you are already attending one of the events we’ll be at, would you consider presenting your idea in person?", "events") }}
      {{ select( "events", upcoming_events, { required: true, options_before: ["I’m not attending an event, but am open to my submission being shared at one", "I’m not interested in having my submission shared at an event"], description: "If you are not already planning to attend the event, it is unlikely we will be able to get you a ticket. That said, if you might qualify for an attendee scholarship, contact us and we will try to help you if we can." } ) }}
    </li>
    <li class="question">
      {{ label("What do you want?", "title") }}
      {{ field( "text", "title", { required: true, placeholder: "I want…", autocapitalize: "sentences", spellcheck: "true" } ) }}
    </li>
    <li class="question">
      {{ label("Now go into a little more detail. How is lack of this impacting your work? How do you currently work around this limitation?", "detail") }}
      {{ textarea( "detail", { required: true, autocapitalize: "sentences", spellcheck: "true", description: "Please note that we may end up rewriting your problem before posting it to this site." } ) }}
    </li>
    <li hidden>
      <label>Don't fill this out if you're human: <input name="bot-field" /></label>
    </li>
    <li hidden>
      <label>Website: <input name="website" autocomplete="off" /></label>
    </li>
  </ol>
  {{ button("Send it in") }}
  <p><em>Note: You can ask us to remove your personal information from this site or our form submission database at any time. We can also retroactively remove your full name from any submissions. Just <a href="/contact/">drop us a line</a>.</em></p>
</form>


<template id="save-locally" style="display: hidden">
  <li class="question">
    {{ confirm("Store my contact info for future submissions", "save", { description: "Checking this will trigger your name, email, and privacy preference to be saved locally within this browser when you submit the form. We can then pre-fill this information for you whenever this form is shown." } ) }}
  </li>
</template>

<script>
  // Locally maintain form info?
  (function(win, doc){
    var $template = document.getElementById('save-locally'),
        $li = $template.content.querySelector('li'),
        $save = $li.querySelector('input'),
        $form = doc.querySelector('[name=problems]'),
        $name = doc.getElementById('field-name'),
        $privacy = doc.getElementById('field-privacy'),
        $email = doc.getElementById('field-email'),
        key = 'contact-info',
        saved_data = win.localStorage.getItem( key ),
        $github = doc.getElementById('field-github'),
        $github_description = doc.getElementById('description-github'),
        o_github_description = $github_description.innerText;

    // add the field
    $form.querySelector('ol').appendChild($li);

    // Save
    function saveInfo() {
      if ( $save.checked === true )
      {
        saved_data = {
          name:    $name.value,
          privacy: $privacy.checked ? '1' : '0',
          email:   $email.value,
          github:  $github.value
        };
        win.localStorage.setItem( key, JSON.stringify( saved_data ) );
      }
      else
      {
        win.localStorage.removeItem( key );
      }
    }

    // Repopulate
    function repopulate( saved_data ) {
      saved_data = JSON.parse( saved_data );
      if ( saved_data['name'] ) {
        $name.value = saved_data['name'];
      }
      if ( saved_data['privacy'] ) {
        $privacy.checked = saved_data['privacy'] === "1";
      }
      if ( saved_data['email'] ) {
        $email.value = saved_data['email'];
      }
      if ( saved_data['github'] ) {
        $github.value = saved_data['github'];
      }
      $save.checked = true;
    }

    // if the data exists, bring it out
    if ( saved_data )
    {
      repopulate( saved_data );
    }

    // listen for changes
    $form.addEventListener('submit', saveInfo, true);

    // Update GitHub field if user goes private
    function toggleGitHub(){
      if ( $privacy.checked )
      {
        $github.disabled = true;
        $github_description.innerText = 'Since you’ve opted to remain private, we’ve disabled this field.';
      }
      else
      {
        $github.disabled = false;
        $github_description.innerText = o_github_description;
      }
    }
    $privacy.addEventListener('change', toggleGitHub, true);

  }(this, this.document));
</script>
